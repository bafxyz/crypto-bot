import React from 'react';
import { render } from 'react-dom';
// Redux
import { createStore, combineReducers, applyMiddleware, compose } from 'redux';
import { Provider } from 'react-redux';
import * as reducers from './reducers';
import thunkMiddleware from 'redux-thunk';
// Router
import { Route } from 'react-router';
import createHistory from 'history/createBrowserHistory';
import {
  ConnectedRouter,
  routerReducer,
  routerMiddleware
  // push
} from 'react-router-redux';
// Containers
import HomePage from './containers/HomePage';
// Css entry points
import './index.scss';
//ServiceWorker
import registerServiceWorker from './services/registerServiceWorker';


// Theming files below should be generated by BE and putted somewhere, so we can get them for every WL site
const filePath = '';
require(filePath + './styles/colors.scss');
require(filePath + './styles/config.scss');

// Create a history of your choosing (we're using a browser history in this case)
const history = createHistory();
// Build the middleware for intercepting and dispatching navigation actions
const reduxRouterMiddleware = routerMiddleware(history);
// Add the reducer to your store on the `router` key
// Also apply our middleware for navigating and debugging
const composeEnhancers =
  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({
        // Specify extensionâ€™s options like name, actionsBlacklist, actionsCreators, serialize...
      })
    : compose;

const enhancer = composeEnhancers(
  applyMiddleware(...reduxRouterMiddleware)
  // other store enhancers if any
);
const store = createStore(
  combineReducers(reducers, thunkMiddleware, routerReducer),
  enhancer
);

// Now you can dispatch navigation actions from anywhere!
// store.dispatch(push("/foo"));
// store.dispatch(push("/bar"));

render(
  <Provider store={store}>
    {/* ConnectedRouter will use the store from Provider automatically */}
    <ConnectedRouter history={history}>
      <Route path="/" component={HomePage} />
    </ConnectedRouter>
  </Provider>,
  document.getElementById('root')
);
registerServiceWorker();
